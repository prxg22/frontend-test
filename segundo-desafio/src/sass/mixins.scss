/* MIXINS */

/**
 * Set main column properties
 * @return void
 */
 @mixin column-display() {
 	display: inline-block;
 	float: left;
 	padding: 0 #{$col-margin};
 	box-sizing: border-box;
 }


/**
 * Calculate max-width of .col-{$index}
 * @param number $index 
 * @return void
 */
 @mixin column-width($index) {
 	width: percentage($index/12);
 }


/**
 * Calculate offset size according to {$index}
 * @param  number $index
 * @return void
 */
 @mixin column-offset($index){
 	margin-left: percentage($index/12) !important;
 	padding-left: 10px !important;
 }

/**
 * Set cols width
 * @return void
 */
 @mixin set-columns-width(){
 	@for $i from 1 through 12 {
 		.col-#{$i}{
 			@include column-width($i);
 		}
 	}
 }

/**
 * Set columns offset
 * @return void
 */
 @mixin set-columns-offset() {
 	@for $i from 1 through 12 {
 		.col-offset-#{$i}{
 			@include column-offset($i);
 		}
 	}
 }

/**
 * Return cols selector list
 * @return list
 */
 @function get-columns($pre: "", $pseudo:""){
 	$i: 1;
 	$list: " #{$pre} .col-#{$i}#{$pseudo}";
 	@for $i from 1 through 12 {
 		$list : "#{$list}, #{$pre} .col-#{$i}#{$pseudo}";
 	}

 	@return $list;
 }

/**
 * Create padding extension classes for each size on list
 * @return void
 */
 @mixin make-padding($list : []) {
 	@each $size in $list {
 		.padding-top-#{$size}, .padding-#{$size} {
 			padding-top: #{$size}px;
 		}

 		.padding-bottom-#{$size}, , .padding-#{$size}{
 			padding-bottom: #{$size}px;
 		}
 	}
 }


/**
 * Create padding extension classes for each size on list
 * @return void
 */
 @mixin make-margin($list : []) {
 	@each $size in $list {
 		.margin-top-#{$size}, .margin-#{$size} {
 			margin-top: #{$size}px;
 		}

 		.margin-bottom-#{$size}, , .margin-#{$size}{
 			margin-bottom: #{$size}px;
 		}
 	}
 }